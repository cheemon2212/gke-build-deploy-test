version: 2.1
orbs:
  gcp-gke: circleci/gcp-gke@1.0.1
kubernetes: &kubernetes
    machine: true
    steps:
      - run: echo "export APP_ENV=`echo ${CIRCLE_BRANCH} | sed 's$/$$g'`" >> $BASH_ENV
      #- run: echo "export GOOGLE_COMPUTE_ZONE=asia-northeast1-a" >> $BASH_ENV
      - checkout
      - gcp-gke/update-kubeconfig-with-credentials:
          cluster: ${CLUSTER}
          install-kubectl: true
          perform-login: true
      - run:
          name: install kustomize
          command: |
            sudo curl -o /bin/kustomize --location https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
            sudo chmod +x /bin/kustomize
      - run:
          name: create namespace
          command: |
            kubectl create namespace ${APP_ENV} || true
      - run:
          name: add global ip
          working_directory: .circleci/overlays/scripts
          command: bash ./add_address.sh ${APP_ENV}
      - run:
          name: Deploy
          working_directory: .circleci
          command: |
            if [ "${CIRCLE_BRANCH}" = "master" ]
            then
              ### kustomize
              cd overlays/prod/test-cluster
              kustomize build | kubectl apply -f -
            fi
build_image: &build_image
    docker:
      - image: google/cloud-sdk:264.0.0
    steps:
      - checkout
      - setup_remote_docker:
          version: 17.05.0-ce
      - run:
         name: Install Docker Compose
         command: |
          curl -L https://github.com/docker/compose/releases/download/1.19.0/docker-compose-`uname -s`-`uname -m` > ~/docker-compose
          chmod +x ~/docker-compose
          mv ~/docker-compose /usr/local/bin/docker-compose
      - run:
         name: BUILD image
         command: docker-compose build ${GCR_IMAGE}
      - run:
          name: Authenticate gcloud to push the image
          command: |
            echo $GCLOUD_SERVICE_KEY > ${HOME}/gcloud-service-key.json
            gcloud auth activate-service-account --key-file ${HOME}/gcloud-service-key.json
            gcloud auth configure-docker --quiet
      - run: echo "export IMAGE_NAME=`docker images|awk '{print $1}'|grep -v REPOSITORY|head -n 1`" >> $BASH_ENV
      - run:
          name: Tag the image
          command: docker tag ${IMAGE_NAME} ${GCR_REGISTRY}/${GOOGLE_PROJECT_ID}/${GCR_IMAGE}
      - run:
          name: Push the image
          command: docker push ${GCR_REGISTRY}/${GOOGLE_PROJECT_ID}/${GCR_IMAGE}
jobs:
    build_webserver:
      <<: *build_image
      environment:
        GCR_IMAGE: webserver
    kubernetes-deploy:
      <<: *kubernetes
      environment:
        GOOGLE_COMPUTE_ZONE: asia-northeast1-a
        CLUSTER: test-cluster
workflows:
  version: 2
  test:
    jobs:
      - build_webserver
      - kubernetes-deploy:
         requires:
          - build_webserver
